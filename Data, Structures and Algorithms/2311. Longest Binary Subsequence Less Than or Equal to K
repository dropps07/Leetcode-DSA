class Solution {
    public int longestSubsequence(String s, int k) {
        int count = 0;
        int zeroCount = 0;

        // First, count all zeroes â†’ they don't increase the value
        for (char c : s.toCharArray()) {
            if (c == '0') count++;
        }

        // Now from the end, try to take 1s (smallest binary weights)
        long value = 0;
        int power = 0;
        for (int i = s.length() - 1; i >= 0; i--) {
            char c = s.charAt(i);
            if (c == '1') {
                if (power < 32) {
                    long add = 1L << power;
                    if (value + add <= k) {
                        value += add;
                        count++;
                    }
                }
                power++;
            } else {
                power++;
            }
        }

        return count;
    }
}
