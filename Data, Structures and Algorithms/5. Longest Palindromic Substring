class Solution {
    public String longestPalindrome(String s) {
            //generating all substring
            //checking if palindrome
            //updating
            int len = s.length();
            String ans ="";
            int maxlen =0;
            //generating loingest odd palidromic sub str
            for(int mid=0; mid<len; mid++){
                int i= mid-1;
                int j= mid+1;
                int curLen =1;
                while(i>=0 && j< len && s.charAt(i) ==  s.charAt(j)){ //longest odd len palindromic sub str
                i--;
                j++;
                curLen +=2;
                }
                if(curLen > maxlen){
                    ans = s.substring(i+1, j);
                    maxlen = curLen;
                }
            }
            
            //generating the longest even sum plaindromic sub str
            for(int mid=0;mid<len-1;mid++){
                int i= mid;
                int j = mid +1;
                int curLen=0;
                while(i>=0 && j<len && s.charAt(i)==s.charAt(j)){
                    i--;
                    j++;
                    curLen+=2;
                }
                if(curLen>maxlen){
                    ans = s.substring(i+1, j);
                    maxlen = curLen;
                }
            }
            
            // for(int i=0;i<len;i++){
            //     String sub ="";
            //     for(int j=i;j<len;j++){
            //         sub+= s.charAt(j)+"";
            //         if(isPalindrome(sub) && sub.length() > longest.length() ){
            //             longest = sub;
            //         }
            //     }
            // }
            return ans;
        }
    }
