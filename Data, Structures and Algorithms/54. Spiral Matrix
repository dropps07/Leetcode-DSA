class Solution {
    public List<Integer> spiralOrder(int[][] matrix) {
        List<Integer> res= new ArrayList<>();
        int rows = matrix.length;
        int cols= matrix[0].length;
        int count=0;
        int up=0;
        int down = rows-1;
        int left =0;
        int right= cols-1;
        while(count< rows*cols ){
            //traverse form elft ot right 
            for(int col = left; col<=right; col++){
                res.add(matrix[up][col]);
                count++;
            }
            //traverse form up to down
            for(int row = up +1; row<=down;row++){
                res.add(matrix[row][right]);
                count++;
            }
            // traverse form right to elft
            if(up!=down){

            for(int col = right-1;col>=left; col--){
                res.add(matrix[down][col]);
                count++;
            }
        }
        //traverse from down to up
        if(right!= left){
            for(int row = down -1;row > up;row--){
                res.add(matrix[row][left]);
                count++;
            }
        }
            up++;
            down--;
            left++;
            right--;
        }
        return res;
    }
}
