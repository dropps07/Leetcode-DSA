/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseList(ListNode head) {
        ListNode prev = null;
        ListNode curr = head;  //curr
        while(curr!= null){ 
            ListNode temp = curr.next;  //save the next node
            curr.next = prev; // saving ths curr value in an empty node before prev
            prev = curr;   // moving prev ptr to curr
            curr = temp;   // move curr to temp to save the node. and start again to save anotehr node
        }
        return prev;
    }
}
